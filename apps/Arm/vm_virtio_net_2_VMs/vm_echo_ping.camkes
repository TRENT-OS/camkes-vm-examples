/*
 * Copyright 2019, Data61, CSIRO (ABN 41 687 119 230)
 *
 * SPDX-License-Identifier: BSD-2-Clause
 */

#include <configurations/vm.h>

import <std_connector.camkes>;
import <global-connectors.camkes>;
import <seL4VMDTBPassthrough.idl4>;
import <FileServerInterface.camkes>;
import <FileServer/FileServer.camkes>;
import <SerialServer/SerialServer.camkes>;
import <TimeServer/TimeServer.camkes>;
import <vm-connectors.camkes>;
import <devices.camkes>;

struct vswitch_mapping {
       string mac_addr;
       int send_id;
       int recv_id;
};

component VM {
    VM_INIT_DEF()
    maybe uses VirtQueueDev recv1;
    maybe uses VirtQueueDrv send1;
    attribute vswitch_mapping vswitch_layout[] = [];
    attribute string vswitch_mac_address = "";
}

component PingClient {
    control;
    /* Virtqueue connection for send and recv */
    uses VirtQueueDev recv;
    uses VirtQueueDrv send;
    emits Callback self;
    consumes Callback ping_wait;
}

assembly {
    composition {
        VM_GENERAL_COMPOSITION_DEF()
        VM_COMPOSITION_DEF(0)
	VM_COMPOSITION_DEF(1)

	VM_VIRTUAL_SERIAL_COMPOSITION_DEF(0,1)

        component PingClient ping_client;
        component VirtQueueInit ping_vqinit0;
        component VirtQueueInit ping_vqinit1;
        component VirtQueueInit vm1_vm0;

        connection seL4VirtQueues ping_virtq_conn0(to ping_vqinit0.init, from ping_client.send, from vm0.recv);
        connection seL4VirtQueues ping_virtq_conn1(to ping_vqinit1.init, from ping_client.recv, from vm0.send);
        connection seL4GlobalAsynchCallback ping_global_callback(from ping_client.self, to ping_client.ping_wait);
	connection seL4VirtQueues vm1_vm0_conn(to vm1_vm0.init, from vm0.send1, from vm0.recv1, from vm1.send, from vm1.recv);

        connection seL4VMDTBPassthrough vm0_dtb(from vm0.dtb_self, to vm0.dtb);
        connection seL4VMDTBPassthrough vm1_dtb(from vm1.dtb_self, to vm1.dtb);
    }
    configuration {
        VM_GENERAL_CONFIGURATION_DEF()
        VM_CONFIGURATION_DEF(0)
        VM_CONFIGURATION_DEF(1)

	VM_VIRTUAL_SERIAL_CONFIGURATION_DEF(0,1)
	
        vm0.num_extra_frame_caps = 0;
        vm0.extra_frame_map_address = 0;
        vm0.cnode_size_bits = 18;
        vm0.simple_untyped24_pool = 12;

        vm0.recv_id = 0;
        vm0.recv_shmem_size = 8192;
        vm0.send_id = 1;
        vm0.send_shmem_size = 8192;
        vm0.recv1_id = 2;
        vm0.recv1_shmem_size = 8192;
        vm0.send1_id = 3;
        vm0.send1_shmem_size = 8192;
        vm0.vswitch_mac_address = "02:00:00:00:AA:01";
        vm0.vswitch_layout = [{"mac_addr": "02:00:00:00:AA:02", "recv_id": 0, "send_id":1},
                              {"mac_addr": "02:00:00:00:AA:03", "recv_id": 2, "send_id":3}];

        ping_client.recv_id = 0;
        ping_client.recv_shmem_size = 8192;
        ping_client.send_id = 1;
        ping_client.send_shmem_size = 8192;
        ping_client.vswitch_mac_address = "02:00:00:00:AA:02";

        vm1.num_extra_frame_caps = 0;
        vm1.extra_frame_map_address = 0;
        vm1.cnode_size_bits = 18;
        vm1.simple_untyped24_pool = 12;

        vm1.recv_id = 0;
        vm1.recv_shmem_size = 8192;
        vm1.send_id = 1;
        vm1.send_shmem_size = 8192;
        vm1.vswitch_mac_address = "02:00:00:00:AA:03";
        vm1.vswitch_layout = [{"mac_addr": "02:00:00:00:AA:01", "recv_id": 0, "send_id":1}];

        vm1_vm0.init_topology = [{ "drv" : "vm0.send1", "dev" : "vm1.recv"},
                                 { "drv" : "vm1.send", "dev" : "vm0.recv1"}];
    }
}
